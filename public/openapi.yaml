openapi: 3.0.0
info:
  title: Apilytics
  description: This is the public API documentation for Apilytics. You need an API key to use the API.
  version: '1.0'
servers:
  - url: https://www.apilytics.io
paths:
  /api/v1/middleware:
    post:
      summary: Log a metric from an origin
      description: Log a metric from an origin. A metric is thought to correspond to a user's single request/response cycle.
        This is called by all Apilytics open source middleware packages. Can be called manually from any custom code as well.
      parameters:
        - in: header
          name: X-API-Key
          description: The API key for your Apilytics origin.
          schema:
            type: string
            format: uuid
          required: true
        - in: header
          name: Apilytics-Version
          description: A version string identifying the official Apilytics middleware package in use.
            This should be omitted if calling this API from custom, non-official code.
          schema:
            type: string
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
                  description: Path of the user's HTTP request.
                  example: /foo/bar/123
                query:
                  type: string
                  description: Query string of the user's HTTP request. An empty string is treated as if this were omitted.
                    Can have an optional "?" at the start.
                  example: key=val&amp;other=123
                method:
                  type: string
                  description: Method of the user's HTTP request.
                  example: GET
                statusCode:
                  type: integer
                  nullable: true
                  description: Status code for the sent HTTP response. Can be omitted if the middleware could not
                    get the status code for the response. E.g. if the inner request handling threw an exception.
                    This accepts a `null` value as well, which currently behaves the same as if this were omitted.
                    Sending a `null` value is deprecated and future code should simply omit this from the payload.
                  example: 200
                requestSize:
                  type: integer
                  description: Size of the user's HTTP request's body in bytes.
                  example: 1024
                responseSize:
                    type: integer
                  description: Size of the body of the sent HTTP response in bytes.
                  example: 2048
                userAgent:
                  type: string
                  description: Value of the `User-Agent` header from the user's HTTP request.
                  example: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36
                timeMillis:
                  type: integer
                  description: The amount of time in milliseconds it took to respond to the user's request.
                  example: 15
              required:
                - path
                - method
                - timeMillis
      responses:
        '200':
          description: On success.
        '400':
          description: Invalid request body, missing some required values.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Invalid input. Missing values for: path, method'
        '401':
          description: Request is missing the X-API-Key header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Missing X-API-Key header.
        '403':
          description: Invalid or unrecognized API Key in the X-API-Key header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid API key.
