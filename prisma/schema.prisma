datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(uuid()) @db.Uuid
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  userId String @map("user_id") @db.Uuid
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String    @id @default(uuid()) @db.Uuid
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  accounts Account[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  // Verification tokens are immutable so no need to store `updatedAt` info.
  createdAt DateTime @default(now()) @map(name: "created_at")

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model WaitlistUser {
  id    String @id @default(uuid()) @db.Uuid
  email String @unique

  role             String
  useCases         String? @map(name: "use_cases")
  howThisCouldHelp String? @map(name: "how_this_could_help")

  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "waitlist_users")
}
